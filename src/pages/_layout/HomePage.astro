---
import type { Entry } from "contentful";
import { MiniCard } from "~components/Course/MiniCard";
import { Leaderboard } from "~components/Leaderboard";
import { RichText } from "~components/RichText";
import Layout from "~layouts/Layout.astro";
import { contentfulClient } from "~services/contentful/contentful";
import type { TypeCourseSkeleton, TypeSimplePageSkeleton } from "~types/contentful";
import type { TypeTournamentSkeleton } from "~types/contentful/TypeTournament";

import * as styles from "./HomePage.css";

// Fetch simplePage entries
const entries = await contentfulClient.getEntries<TypeSimplePageSkeleton>({
	content_type: "simplePage",
	"fields.title": "Home",
});

// Fetch course and tournament data
const courseEntries = await contentfulClient.getEntries<TypeCourseSkeleton>({
	content_type: "course",
});

const today = new Date();
today.setHours(0, 0, 0, 0); // Set time to 00:00:00

// Find the first upcoming tournament date
const upcomingTournament = courseEntries.items
	.flatMap((course) => course.fields.tournaments ?? []) // Flatten all tournaments
	.filter(
		(tournament): tournament is Entry<TypeTournamentSkeleton, undefined, string> =>
			tournament &&
			"fields" in tournament &&
			tournament.fields.date &&
			new Date(tournament.fields.date) >= today, // Compare with normalized date
	)
	.sort(
		(a, b) => new Date(a.fields.date).getTime() - new Date(b.fields.date).getTime(), // Sort by date ascending
	)[0]; // Get the earliest upcoming tournament

// Extract relevant data
const tournamentDate = upcomingTournament?.fields.date ?? "TBD";
const tournamentPrices = upcomingTournament?.fields.prices ?? [];
const tournamentPlayers = upcomingTournament?.fields.players ?? "N/A";
const tournamentInclusions = upcomingTournament?.fields.inclusions ?? [];
const courseName =
	courseEntries.items.find((course) =>
		course.fields.tournaments?.some((tournament) => tournament === upcomingTournament),
	)?.fields.course ?? "Unknown Course";

const courseSlug = courseEntries.items.find((course) =>
	course.fields.tournaments?.some((tournament) => tournament === upcomingTournament),
)?.fields.slug;
---

<Layout
  title="UCSD Casual Golf Club | San Diego Golf Tournaments & Community"
  description="UCSD Casual Golf Club â€“ monthly tournaments & camaraderie for UCSD faculty, staff, students, alumni & friends. All handicap levels welcome. Join today!"
>
  <div class={styles.homeWrapper}>
    <section class={styles.homeHero}>
      <MiniCard
        title={'Upcoming Tournament'}
        date={tournamentDate}
        prices={tournamentPrices}
        players={tournamentPlayers}
        inclusions={tournamentInclusions}
        course={courseName}
        isCoursePage={false}
        slug={courseSlug}
        label="Details"
      />
    </section>
    <section class={styles.homeColWrapper}>
      {
        entries.items.map((item) => (
          <section class={styles.leftCol}>
            {item.fields.content && (
              <RichText richText={item.fields.content} client:load />
            )}
          </section>
        ))
      }
      <section class={styles.rightCol}>
        <Leaderboard gross />
        <Leaderboard net firstFlight />
        <Leaderboard net secondFlight />
      </section>
    </section>
  </div>
</Layout>
