---
import { ResponsiveHeadline } from "~components/ResponsiveHeadline";
import Layout from "../../layouts/Layout.astro";
import { contentfulClient } from "../../lib/contentful";
import type { TypeLeadersSkeleton } from "../../types/contentful";

import { subPageWrapper, heroWrapper } from "../../styles/common.css";

import { Table } from "~components/Table";

const entries = await contentfulClient.getEntries<TypeLeadersSkeleton>({
  content_type: "leaders",
  order: ["fields.handicapIndex"],
});
---

<Layout title="Roster" description="Roster">
  <section class={heroWrapper}>
    <ResponsiveHeadline size={3} as="h1">Roster</ResponsiveHeadline>
  </section>
  <div class={subPageWrapper}>
    <Table
      thead={["Player", "Index"]}
      tbody={entries.items
        .filter((item) => item.fields.onCurrentRoster === true) // Filter players on the current roster
        .map((item) => {
          return item.fields.guest?.includes("Yes")
            ? null
            : [
                item.fields.playerName,
                item.fields.handicapIndex === undefined
                  ? "NH"
                  : String(item.fields.handicapIndex),
              ];
        })
        .filter((row) => row !== null) as string[][]}
    />
  </div>
</Layout>
