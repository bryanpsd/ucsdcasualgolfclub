---
import { ResponsiveHeadline } from "~components/ResponsiveHeadline";

import { concatClasses } from "~utils/concatClasses";
import * as styles from "./Scorecard.css";

const { courseScorecard } = Astro.props;
---

{
  courseScorecard && (
    <div class={styles.scorecardSectionWrapper}>
      <ResponsiveHeadline id="results-link" size={1} as="h2">
        Scorecard
      </ResponsiveHeadline>
      <div class={styles.scorecardTableWrapper}>
        <table class={styles.table}>
          <thead class={styles.thead}>
            <tr>
              <th class={concatClasses([styles.th, styles.boldColumn])}>
                Hole
              </th>
              <th class={styles.th}>1</th>
              <th class={styles.th}>2</th>
              <th class={styles.th}>3</th>
              <th class={styles.th}>4</th>
              <th class={styles.th}>5</th>
              <th class={styles.th}>6</th>
              <th class={styles.th}>7</th>
              <th class={styles.th}>8</th>
              <th class={styles.th}>9</th>
              <th class={concatClasses([styles.th, styles.boldColumn])}>Out</th>
              <th class={styles.th}>10</th>
              <th class={styles.th}>11</th>
              <th class={styles.th}>12</th>
              <th class={styles.th}>13</th>
              <th class={styles.th}>14</th>
              <th class={styles.th}>15</th>
              <th class={styles.th}>16</th>
              <th class={styles.th}>17</th>
              <th class={styles.th}>18</th>
              <th class={concatClasses([styles.th, styles.boldColumn])}>In</th>
              <th class={concatClasses([styles.th, styles.boldColumn])}>
                Total
              </th>
            </tr>
          </thead>
          <tbody>
            {courseScorecard.map((row: {
              [x: string]: unknown;
              Hole: unknown;
              Out: unknown;
              In: unknown;
              Total: unknown;
            }) => {
              const holeLabel = String(row.Hole ?? "").toLowerCase();
              const isHandicap = holeLabel.startsWith("handicap");
              const isPar = holeLabel === "par" || holeLabel.startsWith("par ");
              return (
                   <tr
                  class={concatClasses([
                    styles.tr,
                    isHandicap ? styles.handicapRow : "",
                    isPar ? styles.parRow : "",
                  ])}
                >
                  <th
                    scope="row"
                    class={concatClasses([styles.th, styles.boldColumn])}
                  >
                    {row.Hole}
                  </th>
                  <td class={styles.td}>{row['1']}</td>
                  <td class={styles.td}>{row['2']}</td>
                  <td class={styles.td}>{row['3']}</td>
                  <td class={styles.td}>{row['4']}</td>
                  <td class={styles.td}>{row['5']}</td>
                  <td class={styles.td}>{row['6']}</td>
                  <td class={styles.td}>{row['7']}</td>
                  <td class={styles.td}>{row['8']}</td>
                  <td class={styles.td}>{row['9']}</td>
                  <td class={concatClasses([styles.td, styles.boldColumn])}>
                    {row.Out}
                  </td>
                  <td class={styles.td}>{row['10']}</td>
                  <td class={styles.td}>{row['11']}</td>
                  <td class={styles.td}>{row['12']}</td>
                  <td class={styles.td}>{row['13']}</td>
                  <td class={styles.td}>{row['14']}</td>
                  <td class={styles.td}>{row['15']}</td>
                  <td class={styles.td}>{row['16']}</td>
                  <td class={styles.td}>{row['17']}</td>
                  <td class={styles.td}>{row['18']}</td>
                  <td class={concatClasses([styles.td, styles.boldColumn])}>
                    {row.In}
                  </td>
                  <td class={concatClasses([styles.td, styles.boldColumn])}>
                    {row.Total}
                  </td>
                </tr>
              );
            })}
          </tbody>
        </table>
      </div>
    </div>
  )
}
